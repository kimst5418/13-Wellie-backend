# Generated by Django 3.1.2 on 2020-11-04 13:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'follows',
            },
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('price', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'subscribes',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('mobile', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50, null=True)),
                ('password', models.CharField(max_length=200)),
                ('profile_image_url', models.URLField(max_length=1000, null=True)),
                ('library_image_url', models.URLField(max_length=1000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('following', models.ManyToManyField(related_name='followed', through='user.Follow', to='user.User')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Usertype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'usertypes',
            },
        ),
        migrations.CreateModel(
            name='UserToSubscribe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateField(auto_now_add=True)),
                ('expirated_at', models.DateField(null=True)),
                ('free', models.BooleanField()),
                ('number', models.IntegerField(default=0)),
                ('subscribe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribe', to='user.subscribe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='user.user')),
            ],
            options={
                'db_table': 'users_subscribes',
                'unique_together': {('user', 'subscribe')},
            },
        ),
        migrations.AddField(
            model_name='user',
            name='subscribe',
            field=models.ManyToManyField(related_name='subscriber', through='user.UserToSubscribe', to='user.Subscribe'),
        ),
        migrations.AddField(
            model_name='user',
            name='usertype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.usertype'),
        ),
        migrations.AddField(
            model_name='follow',
            name='follower',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reader', to='user.user'),
        ),
        migrations.AddField(
            model_name='follow',
            name='reader',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower', to='user.user'),
        ),
        migrations.AlterUniqueTogether(
            name='follow',
            unique_together={('follower', 'reader')},
        ),
    ]
